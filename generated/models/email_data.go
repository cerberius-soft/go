// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// EmailData IPInfo contains information about a single IP lookup result.
//
// swagger:model EmailData
type EmailData struct {

	// comment
	// Example: success
	Comment string `json:"comment,omitempty"`

	// Suggests a possible typo fix for an email address like user@gogle.com.
	// Example: user@google.com
	DidYouMean string `json:"did_you_mean,omitempty"`

	// Domain part of the email address.
	// Example: example.com
	Domain string `json:"domain,omitempty"`

	// IP address of the domain.
	// Example: 1.2.3.4
	DomainIP string `json:"domain_ip,omitempty"`

	// The email address that was looked up.
	// Example: user@example.com
	EmailAddress string `json:"email_address,omitempty"`

	// Indicates if the MX server has a DMARC record.
	// Example: true
	HasDMARC bool `json:"has_dmarc,omitempty"`

	// Indicates if the MX seerver have a SPF record.
	// Example: true
	HasSPF bool `json:"has_spf,omitempty"`

	// Indicates if the email address is temporary and disposable.
	// Example: true
	IsDisposable bool `json:"is_disposable,omitempty"`

	// Indicates if the email address is from a free email provider.
	// Example: true
	IsFree bool `json:"is_free,omitempty"`

	// Indicates if the email address is a shared addrss, like sales@example.com.
	// Example: false
	IsSharedAddress bool `json:"is_shared_address,omitempty"`

	// MX record of the domain.
	// Example: mail.example.com
	MX string `json:"mx_hosts,omitempty"`

	// Revers DNS of the MX domain's IP address.
	// Example: mx.example.com
	MXReverseDNS string `json:"mx_reverse_dns,omitempty"`

	// Indicates if the SMTP server checks that the user exists on RCPT TO.
	// Example: true
	SMTPCatchAll bool `json:"smtp_catch_all,omitempty"`

	// Indicates if teh SMTP server is valid.
	// Example: true
	SMTPValid bool `json:"smtp_valid,omitempty"`

	// User part of the email address.
	// Example: user
	User string `json:"user,omitempty"`

	// Overall validity score of the email address.
	// Example: 90
	ValidityScore int64 `json:"validity_score,omitempty"`
}

// Validate validates this email data
func (m *EmailData) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this email data based on context it is used
func (m *EmailData) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *EmailData) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *EmailData) UnmarshalBinary(b []byte) error {
	var res EmailData
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
