// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"cerberius.com/go-client/generated/models"
)

// IPLookupRequestDataReader is a Reader for the IPLookupRequestData structure.
type IPLookupRequestDataReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *IPLookupRequestDataReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewIPLookupRequestDataOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewIPLookupRequestDataDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewIPLookupRequestDataOK creates a IPLookupRequestDataOK with default headers values
func NewIPLookupRequestDataOK() *IPLookupRequestDataOK {
	return &IPLookupRequestDataOK{}
}

/*
IPLookupRequestDataOK describes a response with status code 200, with default header values.

Response for IP information lookup
*/
type IPLookupRequestDataOK struct {
	Payload *models.IPLookupResponse
}

// IsSuccess returns true when this ip lookup request data o k response has a 2xx status code
func (o *IPLookupRequestDataOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this ip lookup request data o k response has a 3xx status code
func (o *IPLookupRequestDataOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this ip lookup request data o k response has a 4xx status code
func (o *IPLookupRequestDataOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this ip lookup request data o k response has a 5xx status code
func (o *IPLookupRequestDataOK) IsServerError() bool {
	return false
}

// IsCode returns true when this ip lookup request data o k response a status code equal to that given
func (o *IPLookupRequestDataOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the ip lookup request data o k response
func (o *IPLookupRequestDataOK) Code() int {
	return 200
}

func (o *IPLookupRequestDataOK) Error() string {
	return fmt.Sprintf("[POST /ip-lookup][%d] ipLookupRequestDataOK  %+v", 200, o.Payload)
}

func (o *IPLookupRequestDataOK) String() string {
	return fmt.Sprintf("[POST /ip-lookup][%d] ipLookupRequestDataOK  %+v", 200, o.Payload)
}

func (o *IPLookupRequestDataOK) GetPayload() *models.IPLookupResponse {
	return o.Payload
}

func (o *IPLookupRequestDataOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.IPLookupResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIPLookupRequestDataDefault creates a IPLookupRequestDataDefault with default headers values
func NewIPLookupRequestDataDefault(code int) *IPLookupRequestDataDefault {
	return &IPLookupRequestDataDefault{
		_statusCode: code,
	}
}

/*
IPLookupRequestDataDefault describes a response with status code -1, with default header values.

Generic error response
*/
type IPLookupRequestDataDefault struct {
	_statusCode int

	Payload interface{}
}

// IsSuccess returns true when this ip lookup request data default response has a 2xx status code
func (o *IPLookupRequestDataDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this ip lookup request data default response has a 3xx status code
func (o *IPLookupRequestDataDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this ip lookup request data default response has a 4xx status code
func (o *IPLookupRequestDataDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this ip lookup request data default response has a 5xx status code
func (o *IPLookupRequestDataDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this ip lookup request data default response a status code equal to that given
func (o *IPLookupRequestDataDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the ip lookup request data default response
func (o *IPLookupRequestDataDefault) Code() int {
	return o._statusCode
}

func (o *IPLookupRequestDataDefault) Error() string {
	return fmt.Sprintf("[POST /ip-lookup][%d] ipLookupRequestData default  %+v", o._statusCode, o.Payload)
}

func (o *IPLookupRequestDataDefault) String() string {
	return fmt.Sprintf("[POST /ip-lookup][%d] ipLookupRequestData default  %+v", o._statusCode, o.Payload)
}

func (o *IPLookupRequestDataDefault) GetPayload() interface{} {
	return o.Payload
}

func (o *IPLookupRequestDataDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
